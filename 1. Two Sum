Example 1:

Input: nums = [2,7,11,15], target = 9
Output: [0,1]
Explanation: Because nums[0] + nums[1] == 9, we return [0, 1].
Example 2:

Input: nums = [3,2,4], target = 6
Output: [1,2]
Example 3:

Input: nums = [3,3], target = 6
Output: [0,1]

📍    
def twoSum(self, nums: List[int], target: int) -> List[int]:
        hashMap = {} # value: index
        for i, n in enumerate(nums):
            diff = target - n 
            if diff in hashMap:
                return [hashMap[diff],i]
            hashMap[n] = i
        ruturn

🛑Create a hash map to store values, starting from empty. 
Check other numbers to see if their sum equals the target value. 
If the sum doesn't match the target value, save the number in the hash map. 
Continue to the next number and check the stored numbers in the hash map until you ultimately reach the number that, 
when added to a number in the hash map, equals the target value.
            
